#!/usr/bin/env ts-node

/**
 * Script de Exemplo - Uso do Banco de Dados
 * 
 * Este arquivo demonstra como usar as diferentes fun√ß√µes
 * do sistema de banco de dados em diferentes cen√°rios
 */

import 'dotenv/config';
import { 
  initDatabase,
  setupDatabase,
  validateDatabase,
  forceCreateTables,
  getDatabaseStatus,
  resetDatabase
} from '../db';

// Exemplo 1: Inicializa√ß√£o padr√£o (recomendado)
async function exemploInicializacao() {
  console.log('\nüöÄ Exemplo 1: Inicializa√ß√£o Padr√£o');
  console.log('=====================================');
  
  try {
    await initDatabase();
    console.log('‚úÖ Banco inicializado com sucesso!');
  } catch (error) {
    console.error('‚ùå Falha na inicializa√ß√£o:', error);
  }
}

// Exemplo 2: Verificar status do banco
async function exemploStatus() {
  console.log('\nüìä Exemplo 2: Verificar Status');
  console.log('================================');
  
  try {
    const status = await getDatabaseStatus();
    console.log('Status do banco:', status);
    
    if (status.status === 'healthy') {
      console.log('üéâ Banco est√° saud√°vel!');
    } else if (status.status === 'degraded') {
      console.log('‚ö†Ô∏è Banco est√° degradado');
    } else {
      console.log('üö® Banco est√° com problemas');
    }
  } catch (error) {
    console.error('‚ùå Erro ao verificar status:', error);
  }
}

// Exemplo 3: Valida√ß√£o manual
async function exemploValidacao() {
  console.log('\nüîç Exemplo 3: Valida√ß√£o Manual');
  console.log('================================');
  
  try {
    const isValid = await validateDatabase();
    if (isValid) {
      console.log('‚úÖ Banco est√° v√°lido');
    } else {
      console.log('‚ùå Banco tem problemas');
    }
  } catch (error) {
    console.error('‚ùå Erro na valida√ß√£o:', error);
  }
}

// Exemplo 4: Setup completo
async function exemploSetup() {
  console.log('\n‚öôÔ∏è Exemplo 4: Setup Completo');
  console.log('==============================');
  
  try {
    await setupDatabase();
    console.log('‚úÖ Setup completo realizado!');
  } catch (error) {
    console.error('‚ùå Falha no setup:', error);
  }
}

// Exemplo 5: For√ßar cria√ß√£o (desenvolvimento)
async function exemploForcarCriacao() {
  console.log('\nüîß Exemplo 5: For√ßar Cria√ß√£o');
  console.log('==============================');
  
  const environment = process.env.NODE_ENV || 'development';
  
  if (environment === 'production') {
    console.log('‚ö†Ô∏è N√£o √© poss√≠vel for√ßar cria√ß√£o em produ√ß√£o');
    return;
  }
  
  try {
    await forceCreateTables();
    console.log('‚úÖ Tabelas for√ßadas com sucesso!');
  } catch (error) {
    console.error('‚ùå Erro ao for√ßar cria√ß√£o:', error);
  }
}

// Exemplo 6: Reset (APENAS desenvolvimento)
async function exemploReset() {
  console.log('\nüóëÔ∏è Exemplo 6: Reset do Banco');
  console.log('=============================');
  
  const environment = process.env.NODE_ENV || 'development';
  
  if (environment === 'production') {
    console.log('üö´ Reset n√£o permitido em produ√ß√£o!');
    return;
  }
  
  try {
    console.log('‚ö†Ô∏è ATEN√á√ÉO: Isso vai deletar todas as tabelas!');
    console.log('Pressione Ctrl+C para cancelar ou aguarde 5 segundos...');
    
    // Aguardar 5 segundos para dar chance de cancelar
    await new Promise(resolve => setTimeout(resolve, 5000));
    
    await resetDatabase();
    console.log('‚úÖ Banco resetado com sucesso!');
  } catch (error) {
    console.error('‚ùå Erro no reset:', error);
  }
}

// Fun√ß√£o principal
async function main() {
  console.log('üéØ Exemplos de Uso do Banco de Dados');
  console.log('=====================================');
  console.log(`üåç Ambiente: ${process.env.NODE_ENV || 'development'}`);
  console.log(`üóÑÔ∏è Database: DynamoDB`);
  
  try {
    // Executar exemplos em sequ√™ncia
    await exemploInicializacao();
    await exemploStatus();
    await exemploValidacao();
    await exemploSetup();
    await exemploForcarCriacao();
    
    // Comentar a linha abaixo para evitar reset acidental
    // await exemploReset();
    
    console.log('\nüéâ Todos os exemplos executados com sucesso!');
  } catch (error) {
    console.error('\n‚ùå Erro durante execu√ß√£o dos exemplos:', error);
  }
}

// Executar se chamado diretamente
if (require.main === module) {
  main().catch(console.error);
}

export {
  exemploInicializacao,
  exemploStatus,
  exemploValidacao,
  exemploSetup,
  exemploForcarCriacao,
  exemploReset
};
